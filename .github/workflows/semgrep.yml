# GitHub Actions workflow for running Semgrep scans.
name: Semgrep

on:
  # Trigger on pull requests to scan changed files.
  pull_request: {}
  # Manually trigger scan via GitHub Actions interface.
  workflow_dispatch: {}
  # Trigger on push to main branches (e.g., master, main).:
  push:
    branches: ["master", "main"]

jobs:
  semgrep_scan:
    # Job name for GitHub Actions.
    name: semgrep/ci
    # Run on the latest Ubuntu environment.
    runs-on: ubuntu-latest
    container:
      # Use Docker image with Semgrep installed (no changes needed). Do not change this.
      image: returntocorp/semgrep
    # Skip PRs created by dependabot to avoid permission issues.
    if: (github.actor != 'dependabot[bot]')
    permissions:
      # required for all workflows
      security-events: write
      # only required for workflows in private repositories
      actions: read
      contents: read

    steps:
      # Fetch project source with GitHub Actions Checkout.
      - name: Checkout repository
        uses: actions/checkout@v3
    
      - name: Perform Semgrep Analysis
      # Run the Semgrep scan with auto-config and output in SARIF format..
      # Modify the --config option to 'r/all' to scan using all rules,
      # or use multiple flags to specify particular rules, such as
      # --config r/all --config custom/rules
        run: semgrep scan -q --sarif --config=p/ci --config=python . > semgrep-results.sarif

      # Upload the results for the CodeQL GitHub app to annotate the code
      - name: Save SARIF results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-scan-results
          path: semgrep-results.sarif

      # Upload SARIF file generated in previous step
      - name: Upload SARIF result to the GitHub Security Dashboard
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep-results.sarif
        if: always()
